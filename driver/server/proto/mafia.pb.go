// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.17.2
// source: mafia.proto

package mafia

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action_Type int32

const (
	Action_START_SESSION        Action_Type = 0
	Action_PLAYER_ROLE          Action_Type = 1
	Action_GAME_STATE           Action_Type = 2
	Action_PLAYER_NICKS         Action_Type = 3
	Action_VOTE                 Action_Type = 4
	Action_KILL_PLAYER_BY_MAFIA Action_Type = 5
	Action_INVESTIGATE_MAFIA    Action_Type = 6
	Action_INTERRUPT_GAME       Action_Type = 7
	Action_INVESTIGATION_RESULT Action_Type = 8
)

// Enum value maps for Action_Type.
var (
	Action_Type_name = map[int32]string{
		0: "START_SESSION",
		1: "PLAYER_ROLE",
		2: "GAME_STATE",
		3: "PLAYER_NICKS",
		4: "VOTE",
		5: "KILL_PLAYER_BY_MAFIA",
		6: "INVESTIGATE_MAFIA",
		7: "INTERRUPT_GAME",
		8: "INVESTIGATION_RESULT",
	}
	Action_Type_value = map[string]int32{
		"START_SESSION":        0,
		"PLAYER_ROLE":          1,
		"GAME_STATE":           2,
		"PLAYER_NICKS":         3,
		"VOTE":                 4,
		"KILL_PLAYER_BY_MAFIA": 5,
		"INVESTIGATE_MAFIA":    6,
		"INTERRUPT_GAME":       7,
		"INVESTIGATION_RESULT": 8,
	}
)

func (x Action_Type) Enum() *Action_Type {
	p := new(Action_Type)
	*p = x
	return p
}

func (x Action_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mafia_proto_enumTypes[0].Descriptor()
}

func (Action_Type) Type() protoreflect.EnumType {
	return &file_mafia_proto_enumTypes[0]
}

func (x Action_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_Type.Descriptor instead.
func (Action_Type) EnumDescriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 0}
}

type ActionResponse_Type int32

const (
	ActionResponse_ASSIGN_USER_ID                ActionResponse_Type = 0
	ActionResponse_PLAYER_ROLE                   ActionResponse_Type = 1
	ActionResponse_GAME_STATE                    ActionResponse_Type = 2
	ActionResponse_PLAYER_NICKS                  ActionResponse_Type = 3
	ActionResponse_VOTE_RESULT                   ActionResponse_Type = 4
	ActionResponse_MAFIA_KILL_RESULT             ActionResponse_Type = 5
	ActionResponse_COMMISAR_INVESTIGATION_RESULT ActionResponse_Type = 6
	ActionResponse_START_GAME                    ActionResponse_Type = 7
	ActionResponse_END_GAME                      ActionResponse_Type = 8
	ActionResponse_DAY_STARTED                   ActionResponse_Type = 9
	ActionResponse_NIGHT_STARTED                 ActionResponse_Type = 10
	ActionResponse_ROUND_RESULT                  ActionResponse_Type = 11
)

// Enum value maps for ActionResponse_Type.
var (
	ActionResponse_Type_name = map[int32]string{
		0:  "ASSIGN_USER_ID",
		1:  "PLAYER_ROLE",
		2:  "GAME_STATE",
		3:  "PLAYER_NICKS",
		4:  "VOTE_RESULT",
		5:  "MAFIA_KILL_RESULT",
		6:  "COMMISAR_INVESTIGATION_RESULT",
		7:  "START_GAME",
		8:  "END_GAME",
		9:  "DAY_STARTED",
		10: "NIGHT_STARTED",
		11: "ROUND_RESULT",
	}
	ActionResponse_Type_value = map[string]int32{
		"ASSIGN_USER_ID":                0,
		"PLAYER_ROLE":                   1,
		"GAME_STATE":                    2,
		"PLAYER_NICKS":                  3,
		"VOTE_RESULT":                   4,
		"MAFIA_KILL_RESULT":             5,
		"COMMISAR_INVESTIGATION_RESULT": 6,
		"START_GAME":                    7,
		"END_GAME":                      8,
		"DAY_STARTED":                   9,
		"NIGHT_STARTED":                 10,
		"ROUND_RESULT":                  11,
	}
)

func (x ActionResponse_Type) Enum() *ActionResponse_Type {
	p := new(ActionResponse_Type)
	*p = x
	return p
}

func (x ActionResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mafia_proto_enumTypes[1].Descriptor()
}

func (ActionResponse_Type) Type() protoreflect.EnumType {
	return &file_mafia_proto_enumTypes[1]
}

func (x ActionResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionResponse_Type.Descriptor instead.
func (ActionResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 0}
}

type ActionResponse_EPlayerRole int32

const (
	ActionResponse_MAFIA    ActionResponse_EPlayerRole = 0
	ActionResponse_COMMISAR ActionResponse_EPlayerRole = 1
	ActionResponse_CIVILIAN ActionResponse_EPlayerRole = 2
	ActionResponse_SPIRIT   ActionResponse_EPlayerRole = 3
)

// Enum value maps for ActionResponse_EPlayerRole.
var (
	ActionResponse_EPlayerRole_name = map[int32]string{
		0: "MAFIA",
		1: "COMMISAR",
		2: "CIVILIAN",
		3: "SPIRIT",
	}
	ActionResponse_EPlayerRole_value = map[string]int32{
		"MAFIA":    0,
		"COMMISAR": 1,
		"CIVILIAN": 2,
		"SPIRIT":   3,
	}
)

func (x ActionResponse_EPlayerRole) Enum() *ActionResponse_EPlayerRole {
	p := new(ActionResponse_EPlayerRole)
	*p = x
	return p
}

func (x ActionResponse_EPlayerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionResponse_EPlayerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_mafia_proto_enumTypes[2].Descriptor()
}

func (ActionResponse_EPlayerRole) Type() protoreflect.EnumType {
	return &file_mafia_proto_enumTypes[2]
}

func (x ActionResponse_EPlayerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionResponse_EPlayerRole.Descriptor instead.
func (ActionResponse_EPlayerRole) EnumDescriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 1}
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Action_Type `protobuf:"varint,1,opt,name=type,proto3,enum=mafia.Action_Type" json:"type,omitempty"`
	// Types that are assignable to Action:
	//
	//	*Action_StartSession_
	//	*Action_PlayerRole_
	//	*Action_GameState_
	//	*Action_PlayerNicks
	//	*Action_Vote_
	//	*Action_KillPlayerByMafia_
	//	*Action_InvestiageMafia
	//	*Action_InterruptGame_
	//	*Action_InvestigationResult_
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetType() Action_Type {
	if x != nil {
		return x.Type
	}
	return Action_START_SESSION
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetStartSession() *Action_StartSession {
	if x, ok := x.GetAction().(*Action_StartSession_); ok {
		return x.StartSession
	}
	return nil
}

func (x *Action) GetPlayerRole() *Action_PlayerRole {
	if x, ok := x.GetAction().(*Action_PlayerRole_); ok {
		return x.PlayerRole
	}
	return nil
}

func (x *Action) GetGameState() *Action_GameState {
	if x, ok := x.GetAction().(*Action_GameState_); ok {
		return x.GameState
	}
	return nil
}

func (x *Action) GetPlayerNicks() *Action_PlayersNicks {
	if x, ok := x.GetAction().(*Action_PlayerNicks); ok {
		return x.PlayerNicks
	}
	return nil
}

func (x *Action) GetVote() *Action_Vote {
	if x, ok := x.GetAction().(*Action_Vote_); ok {
		return x.Vote
	}
	return nil
}

func (x *Action) GetKillPlayerByMafia() *Action_KillPlayerByMafia {
	if x, ok := x.GetAction().(*Action_KillPlayerByMafia_); ok {
		return x.KillPlayerByMafia
	}
	return nil
}

func (x *Action) GetInvestiageMafia() *Action_InvestigateMafia {
	if x, ok := x.GetAction().(*Action_InvestiageMafia); ok {
		return x.InvestiageMafia
	}
	return nil
}

func (x *Action) GetInterruptGame() *Action_InterruptGame {
	if x, ok := x.GetAction().(*Action_InterruptGame_); ok {
		return x.InterruptGame
	}
	return nil
}

func (x *Action) GetInvestigationResult() *Action_InvestigationResult {
	if x, ok := x.GetAction().(*Action_InvestigationResult_); ok {
		return x.InvestigationResult
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_StartSession_ struct {
	// prepare phase
	StartSession *Action_StartSession `protobuf:"bytes,2,opt,name=start_session,json=startSession,proto3,oneof"`
}

type Action_PlayerRole_ struct {
	// info queries
	PlayerRole *Action_PlayerRole `protobuf:"bytes,3,opt,name=player_role,json=playerRole,proto3,oneof"`
}

type Action_GameState_ struct {
	GameState *Action_GameState `protobuf:"bytes,4,opt,name=game_state,json=gameState,proto3,oneof"`
}

type Action_PlayerNicks struct {
	PlayerNicks *Action_PlayersNicks `protobuf:"bytes,5,opt,name=player_nicks,json=playerNicks,proto3,oneof"`
}

type Action_Vote_ struct {
	// game actions
	Vote *Action_Vote `protobuf:"bytes,6,opt,name=vote,proto3,oneof"`
}

type Action_KillPlayerByMafia_ struct {
	KillPlayerByMafia *Action_KillPlayerByMafia `protobuf:"bytes,7,opt,name=kill_player_by_mafia,json=killPlayerByMafia,proto3,oneof"`
}

type Action_InvestiageMafia struct {
	InvestiageMafia *Action_InvestigateMafia `protobuf:"bytes,8,opt,name=investiage_mafia,json=investiageMafia,proto3,oneof"`
}

type Action_InterruptGame_ struct {
	InterruptGame *Action_InterruptGame `protobuf:"bytes,9,opt,name=interrupt_game,json=interruptGame,proto3,oneof"`
}

type Action_InvestigationResult_ struct {
	InvestigationResult *Action_InvestigationResult `protobuf:"bytes,10,opt,name=investigation_result,json=investigationResult,proto3,oneof"`
}

func (*Action_StartSession_) isAction_Action() {}

func (*Action_PlayerRole_) isAction_Action() {}

func (*Action_GameState_) isAction_Action() {}

func (*Action_PlayerNicks) isAction_Action() {}

func (*Action_Vote_) isAction_Action() {}

func (*Action_KillPlayerByMafia_) isAction_Action() {}

func (*Action_InvestiageMafia) isAction_Action() {}

func (*Action_InterruptGame_) isAction_Action() {}

func (*Action_InvestigationResult_) isAction_Action() {}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ActionResponse_Type `protobuf:"varint,1,opt,name=type,proto3,enum=mafia.ActionResponse_Type" json:"type,omitempty"`
	// Types that are assignable to ActionResult:
	//
	//	*ActionResponse_AssignUserId_
	//	*ActionResponse_Role
	//	*ActionResponse_GameState_
	//	*ActionResponse_PlayerNicks_
	//	*ActionResponse_VoteResult_
	//	*ActionResponse_MafiaKillResult_
	//	*ActionResponse_ComissareInvestigationResult
	//	*ActionResponse_StartGame_
	//	*ActionResponse_EndGame_
	//	*ActionResponse_DayStarted_
	//	*ActionResponse_NightStarted_
	//	*ActionResponse_Result
	ActionResult isActionResponse_ActionResult `protobuf_oneof:"action_result"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1}
}

func (x *ActionResponse) GetType() ActionResponse_Type {
	if x != nil {
		return x.Type
	}
	return ActionResponse_ASSIGN_USER_ID
}

func (m *ActionResponse) GetActionResult() isActionResponse_ActionResult {
	if m != nil {
		return m.ActionResult
	}
	return nil
}

func (x *ActionResponse) GetAssignUserId() *ActionResponse_AssignUserId {
	if x, ok := x.GetActionResult().(*ActionResponse_AssignUserId_); ok {
		return x.AssignUserId
	}
	return nil
}

func (x *ActionResponse) GetRole() *ActionResponse_PlayerRole {
	if x, ok := x.GetActionResult().(*ActionResponse_Role); ok {
		return x.Role
	}
	return nil
}

func (x *ActionResponse) GetGameState() *ActionResponse_GameState {
	if x, ok := x.GetActionResult().(*ActionResponse_GameState_); ok {
		return x.GameState
	}
	return nil
}

func (x *ActionResponse) GetPlayerNicks() *ActionResponse_PlayerNicks {
	if x, ok := x.GetActionResult().(*ActionResponse_PlayerNicks_); ok {
		return x.PlayerNicks
	}
	return nil
}

func (x *ActionResponse) GetVoteResult() *ActionResponse_VoteResult {
	if x, ok := x.GetActionResult().(*ActionResponse_VoteResult_); ok {
		return x.VoteResult
	}
	return nil
}

func (x *ActionResponse) GetMafiaKillResult() *ActionResponse_MafiaKillResult {
	if x, ok := x.GetActionResult().(*ActionResponse_MafiaKillResult_); ok {
		return x.MafiaKillResult
	}
	return nil
}

func (x *ActionResponse) GetComissareInvestigationResult() *ActionResponse_CommisarInvestigationResult {
	if x, ok := x.GetActionResult().(*ActionResponse_ComissareInvestigationResult); ok {
		return x.ComissareInvestigationResult
	}
	return nil
}

func (x *ActionResponse) GetStartGame() *ActionResponse_StartGame {
	if x, ok := x.GetActionResult().(*ActionResponse_StartGame_); ok {
		return x.StartGame
	}
	return nil
}

func (x *ActionResponse) GetEndGame() *ActionResponse_EndGame {
	if x, ok := x.GetActionResult().(*ActionResponse_EndGame_); ok {
		return x.EndGame
	}
	return nil
}

func (x *ActionResponse) GetDayStarted() *ActionResponse_DayStarted {
	if x, ok := x.GetActionResult().(*ActionResponse_DayStarted_); ok {
		return x.DayStarted
	}
	return nil
}

func (x *ActionResponse) GetNightStarted() *ActionResponse_NightStarted {
	if x, ok := x.GetActionResult().(*ActionResponse_NightStarted_); ok {
		return x.NightStarted
	}
	return nil
}

func (x *ActionResponse) GetResult() *ActionResponse_RoundResult {
	if x, ok := x.GetActionResult().(*ActionResponse_Result); ok {
		return x.Result
	}
	return nil
}

type isActionResponse_ActionResult interface {
	isActionResponse_ActionResult()
}

type ActionResponse_AssignUserId_ struct {
	// prepare phase
	AssignUserId *ActionResponse_AssignUserId `protobuf:"bytes,2,opt,name=assign_user_id,json=assignUserId,proto3,oneof"`
}

type ActionResponse_Role struct {
	// user info queries
	Role *ActionResponse_PlayerRole `protobuf:"bytes,3,opt,name=role,proto3,oneof"`
}

type ActionResponse_GameState_ struct {
	GameState *ActionResponse_GameState `protobuf:"bytes,4,opt,name=game_state,json=gameState,proto3,oneof"`
}

type ActionResponse_PlayerNicks_ struct {
	PlayerNicks *ActionResponse_PlayerNicks `protobuf:"bytes,5,opt,name=player_nicks,json=playerNicks,proto3,oneof"`
}

type ActionResponse_VoteResult_ struct {
	// game actions results
	VoteResult *ActionResponse_VoteResult `protobuf:"bytes,6,opt,name=vote_result,json=voteResult,proto3,oneof"`
}

type ActionResponse_MafiaKillResult_ struct {
	MafiaKillResult *ActionResponse_MafiaKillResult `protobuf:"bytes,7,opt,name=mafia_kill_result,json=mafiaKillResult,proto3,oneof"`
}

type ActionResponse_ComissareInvestigationResult struct {
	ComissareInvestigationResult *ActionResponse_CommisarInvestigationResult `protobuf:"bytes,8,opt,name=comissare_investigation_result,json=comissareInvestigationResult,proto3,oneof"`
}

type ActionResponse_StartGame_ struct {
	// game start and finish
	StartGame *ActionResponse_StartGame `protobuf:"bytes,9,opt,name=start_game,json=startGame,proto3,oneof"`
}

type ActionResponse_EndGame_ struct {
	EndGame *ActionResponse_EndGame `protobuf:"bytes,10,opt,name=end_game,json=endGame,proto3,oneof"`
}

type ActionResponse_DayStarted_ struct {
	// day and night transitions
	DayStarted *ActionResponse_DayStarted `protobuf:"bytes,11,opt,name=day_started,json=dayStarted,proto3,oneof"`
}

type ActionResponse_NightStarted_ struct {
	NightStarted *ActionResponse_NightStarted `protobuf:"bytes,12,opt,name=night_started,json=nightStarted,proto3,oneof"`
}

type ActionResponse_Result struct {
	// round result
	Result *ActionResponse_RoundResult `protobuf:"bytes,13,opt,name=result,proto3,oneof"`
}

func (*ActionResponse_AssignUserId_) isActionResponse_ActionResult() {}

func (*ActionResponse_Role) isActionResponse_ActionResult() {}

func (*ActionResponse_GameState_) isActionResponse_ActionResult() {}

func (*ActionResponse_PlayerNicks_) isActionResponse_ActionResult() {}

func (*ActionResponse_VoteResult_) isActionResponse_ActionResult() {}

func (*ActionResponse_MafiaKillResult_) isActionResponse_ActionResult() {}

func (*ActionResponse_ComissareInvestigationResult) isActionResponse_ActionResult() {}

func (*ActionResponse_StartGame_) isActionResponse_ActionResult() {}

func (*ActionResponse_EndGame_) isActionResponse_ActionResult() {}

func (*ActionResponse_DayStarted_) isActionResponse_ActionResult() {}

func (*ActionResponse_NightStarted_) isActionResponse_ActionResult() {}

func (*ActionResponse_Result) isActionResponse_ActionResult() {}

type Action_StartSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *Action_StartSession) Reset() {
	*x = Action_StartSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_StartSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_StartSession) ProtoMessage() {}

func (x *Action_StartSession) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_StartSession.ProtoReflect.Descriptor instead.
func (*Action_StartSession) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Action_StartSession) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type Action_PlayerRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Action_PlayerRole) Reset() {
	*x = Action_PlayerRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_PlayerRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_PlayerRole) ProtoMessage() {}

func (x *Action_PlayerRole) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_PlayerRole.ProtoReflect.Descriptor instead.
func (*Action_PlayerRole) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Action_PlayerRole) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Action_GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Action_GameState) Reset() {
	*x = Action_GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_GameState) ProtoMessage() {}

func (x *Action_GameState) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_GameState.ProtoReflect.Descriptor instead.
func (*Action_GameState) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Action_GameState) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Action_PlayersNicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Action_PlayersNicks) Reset() {
	*x = Action_PlayersNicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_PlayersNicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_PlayersNicks) ProtoMessage() {}

func (x *Action_PlayersNicks) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_PlayersNicks.ProtoReflect.Descriptor instead.
func (*Action_PlayersNicks) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Action_PlayersNicks) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Action_Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MafiaUsername string `protobuf:"bytes,2,opt,name=mafia_username,json=mafiaUsername,proto3" json:"mafia_username,omitempty"`
}

func (x *Action_Vote) Reset() {
	*x = Action_Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Vote) ProtoMessage() {}

func (x *Action_Vote) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Vote.ProtoReflect.Descriptor instead.
func (*Action_Vote) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Action_Vote) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Action_Vote) GetMafiaUsername() string {
	if x != nil {
		return x.MafiaUsername
	}
	return ""
}

type Action_KillPlayerByMafia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlayerUsername string `protobuf:"bytes,2,opt,name=player_username,json=playerUsername,proto3" json:"player_username,omitempty"`
}

func (x *Action_KillPlayerByMafia) Reset() {
	*x = Action_KillPlayerByMafia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_KillPlayerByMafia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_KillPlayerByMafia) ProtoMessage() {}

func (x *Action_KillPlayerByMafia) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_KillPlayerByMafia.ProtoReflect.Descriptor instead.
func (*Action_KillPlayerByMafia) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Action_KillPlayerByMafia) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Action_KillPlayerByMafia) GetPlayerUsername() string {
	if x != nil {
		return x.PlayerUsername
	}
	return ""
}

type Action_InvestigateMafia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MafiaUsername string `protobuf:"bytes,2,opt,name=mafia_username,json=mafiaUsername,proto3" json:"mafia_username,omitempty"`
}

func (x *Action_InvestigateMafia) Reset() {
	*x = Action_InvestigateMafia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_InvestigateMafia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_InvestigateMafia) ProtoMessage() {}

func (x *Action_InvestigateMafia) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_InvestigateMafia.ProtoReflect.Descriptor instead.
func (*Action_InvestigateMafia) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Action_InvestigateMafia) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Action_InvestigateMafia) GetMafiaUsername() string {
	if x != nil {
		return x.MafiaUsername
	}
	return ""
}

type Action_InterruptGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Action_InterruptGame) Reset() {
	*x = Action_InterruptGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_InterruptGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_InterruptGame) ProtoMessage() {}

func (x *Action_InterruptGame) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_InterruptGame.ProtoReflect.Descriptor instead.
func (*Action_InterruptGame) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Action_InterruptGame) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Action_InvestigationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PublishResult bool   `protobuf:"varint,2,opt,name=publish_result,json=publishResult,proto3" json:"publish_result,omitempty"`
}

func (x *Action_InvestigationResult) Reset() {
	*x = Action_InvestigationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_InvestigationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_InvestigationResult) ProtoMessage() {}

func (x *Action_InvestigationResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_InvestigationResult.ProtoReflect.Descriptor instead.
func (*Action_InvestigationResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Action_InvestigationResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Action_InvestigationResult) GetPublishResult() bool {
	if x != nil {
		return x.PublishResult
	}
	return false
}

// Users' actions responses
type ActionResponse_ActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ActionResponse_ActionResult_Success
	//	*ActionResponse_ActionResult_Error
	Result isActionResponse_ActionResult_Result `protobuf_oneof:"result"`
}

func (x *ActionResponse_ActionResult) Reset() {
	*x = ActionResponse_ActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_ActionResult) ProtoMessage() {}

func (x *ActionResponse_ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_ActionResult.ProtoReflect.Descriptor instead.
func (*ActionResponse_ActionResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 0}
}

func (m *ActionResponse_ActionResult) GetResult() isActionResponse_ActionResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ActionResponse_ActionResult) GetSuccess() string {
	if x, ok := x.GetResult().(*ActionResponse_ActionResult_Success); ok {
		return x.Success
	}
	return ""
}

func (x *ActionResponse_ActionResult) GetError() string {
	if x, ok := x.GetResult().(*ActionResponse_ActionResult_Error); ok {
		return x.Error
	}
	return ""
}

type isActionResponse_ActionResult_Result interface {
	isActionResponse_ActionResult_Result()
}

type ActionResponse_ActionResult_Success struct {
	Success string `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type ActionResponse_ActionResult_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ActionResponse_ActionResult_Success) isActionResponse_ActionResult_Result() {}

func (*ActionResponse_ActionResult_Error) isActionResponse_ActionResult_Result() {}

type ActionResponse_AssignUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ActionResponse_ActionResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActionResponse_AssignUserId) Reset() {
	*x = ActionResponse_AssignUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_AssignUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_AssignUserId) ProtoMessage() {}

func (x *ActionResponse_AssignUserId) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_AssignUserId.ProtoReflect.Descriptor instead.
func (*ActionResponse_AssignUserId) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ActionResponse_AssignUserId) GetResult() *ActionResponse_ActionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ActionResponse_PlayerRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role ActionResponse_EPlayerRole `protobuf:"varint,1,opt,name=role,proto3,enum=mafia.ActionResponse_EPlayerRole" json:"role,omitempty"`
}

func (x *ActionResponse_PlayerRole) Reset() {
	*x = ActionResponse_PlayerRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_PlayerRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_PlayerRole) ProtoMessage() {}

func (x *ActionResponse_PlayerRole) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_PlayerRole.ProtoReflect.Descriptor instead.
func (*ActionResponse_PlayerRole) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ActionResponse_PlayerRole) GetRole() ActionResponse_EPlayerRole {
	if x != nil {
		return x.Role
	}
	return ActionResponse_MAFIA
}

type ActionResponse_GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDay   int32 `protobuf:"varint,1,opt,name=current_day,json=currentDay,proto3" json:"current_day,omitempty"`
	AlivePlayers int32 `protobuf:"varint,2,opt,name=alive_players,json=alivePlayers,proto3" json:"alive_players,omitempty"`
}

func (x *ActionResponse_GameState) Reset() {
	*x = ActionResponse_GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_GameState) ProtoMessage() {}

func (x *ActionResponse_GameState) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_GameState.ProtoReflect.Descriptor instead.
func (*ActionResponse_GameState) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ActionResponse_GameState) GetCurrentDay() int32 {
	if x != nil {
		return x.CurrentDay
	}
	return 0
}

func (x *ActionResponse_GameState) GetAlivePlayers() int32 {
	if x != nil {
		return x.AlivePlayers
	}
	return 0
}

type ActionResponse_PlayerNicks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nicks []string `protobuf:"bytes,1,rep,name=nicks,proto3" json:"nicks,omitempty"`
}

func (x *ActionResponse_PlayerNicks) Reset() {
	*x = ActionResponse_PlayerNicks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_PlayerNicks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_PlayerNicks) ProtoMessage() {}

func (x *ActionResponse_PlayerNicks) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_PlayerNicks.ProtoReflect.Descriptor instead.
func (*ActionResponse_PlayerNicks) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 4}
}

func (x *ActionResponse_PlayerNicks) GetNicks() []string {
	if x != nil {
		return x.Nicks
	}
	return nil
}

type ActionResponse_VoteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ActionResponse_ActionResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActionResponse_VoteResult) Reset() {
	*x = ActionResponse_VoteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_VoteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_VoteResult) ProtoMessage() {}

func (x *ActionResponse_VoteResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_VoteResult.ProtoReflect.Descriptor instead.
func (*ActionResponse_VoteResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 5}
}

func (x *ActionResponse_VoteResult) GetResult() *ActionResponse_ActionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ActionResponse_MafiaKillResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ActionResponse_ActionResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActionResponse_MafiaKillResult) Reset() {
	*x = ActionResponse_MafiaKillResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_MafiaKillResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_MafiaKillResult) ProtoMessage() {}

func (x *ActionResponse_MafiaKillResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_MafiaKillResult.ProtoReflect.Descriptor instead.
func (*ActionResponse_MafiaKillResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 6}
}

func (x *ActionResponse_MafiaKillResult) GetResult() *ActionResponse_ActionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ActionResponse_CommisarInvestigationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result        *ActionResponse_ActionResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	MafiaNickname string                       `protobuf:"bytes,2,opt,name=mafiaNickname,proto3" json:"mafiaNickname,omitempty"`
}

func (x *ActionResponse_CommisarInvestigationResult) Reset() {
	*x = ActionResponse_CommisarInvestigationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_CommisarInvestigationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_CommisarInvestigationResult) ProtoMessage() {}

func (x *ActionResponse_CommisarInvestigationResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_CommisarInvestigationResult.ProtoReflect.Descriptor instead.
func (*ActionResponse_CommisarInvestigationResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 7}
}

func (x *ActionResponse_CommisarInvestigationResult) GetResult() *ActionResponse_ActionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ActionResponse_CommisarInvestigationResult) GetMafiaNickname() string {
	if x != nil {
		return x.MafiaNickname
	}
	return ""
}

// game status responses
type ActionResponse_StartGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartGame string   `protobuf:"bytes,1,opt,name=start_game,json=startGame,proto3" json:"start_game,omitempty"`
	Nicknames []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
}

func (x *ActionResponse_StartGame) Reset() {
	*x = ActionResponse_StartGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_StartGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_StartGame) ProtoMessage() {}

func (x *ActionResponse_StartGame) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_StartGame.ProtoReflect.Descriptor instead.
func (*ActionResponse_StartGame) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 8}
}

func (x *ActionResponse_StartGame) GetStartGame() string {
	if x != nil {
		return x.StartGame
	}
	return ""
}

func (x *ActionResponse_StartGame) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

type ActionResponse_EndGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameResult string `protobuf:"bytes,1,opt,name=game_result,json=gameResult,proto3" json:"game_result,omitempty"`
}

func (x *ActionResponse_EndGame) Reset() {
	*x = ActionResponse_EndGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_EndGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_EndGame) ProtoMessage() {}

func (x *ActionResponse_EndGame) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_EndGame.ProtoReflect.Descriptor instead.
func (*ActionResponse_EndGame) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 9}
}

func (x *ActionResponse_EndGame) GetGameResult() string {
	if x != nil {
		return x.GameResult
	}
	return ""
}

// day and night transitions
type ActionResponse_DayStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMsg   string   `protobuf:"bytes,1,opt,name=user_msg,json=userMsg,proto3" json:"user_msg,omitempty"`
	Nicknames []string `protobuf:"bytes,2,rep,name=nicknames,proto3" json:"nicknames,omitempty"`
}

func (x *ActionResponse_DayStarted) Reset() {
	*x = ActionResponse_DayStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_DayStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_DayStarted) ProtoMessage() {}

func (x *ActionResponse_DayStarted) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_DayStarted.ProtoReflect.Descriptor instead.
func (*ActionResponse_DayStarted) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 10}
}

func (x *ActionResponse_DayStarted) GetUserMsg() string {
	if x != nil {
		return x.UserMsg
	}
	return ""
}

func (x *ActionResponse_DayStarted) GetNicknames() []string {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

type ActionResponse_NightStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMsg string                     `protobuf:"bytes,1,opt,name=user_msg,json=userMsg,proto3" json:"user_msg,omitempty"`
	Role    ActionResponse_EPlayerRole `protobuf:"varint,2,opt,name=role,proto3,enum=mafia.ActionResponse_EPlayerRole" json:"role,omitempty"`
}

func (x *ActionResponse_NightStarted) Reset() {
	*x = ActionResponse_NightStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_NightStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_NightStarted) ProtoMessage() {}

func (x *ActionResponse_NightStarted) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_NightStarted.ProtoReflect.Descriptor instead.
func (*ActionResponse_NightStarted) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 11}
}

func (x *ActionResponse_NightStarted) GetUserMsg() string {
	if x != nil {
		return x.UserMsg
	}
	return ""
}

func (x *ActionResponse_NightStarted) GetRole() ActionResponse_EPlayerRole {
	if x != nil {
		return x.Role
	}
	return ActionResponse_MAFIA
}

// round result
type ActionResponse_RoundResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMsg string `protobuf:"bytes,2,opt,name=user_msg,json=userMsg,proto3" json:"user_msg,omitempty"`
}

func (x *ActionResponse_RoundResult) Reset() {
	*x = ActionResponse_RoundResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mafia_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse_RoundResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse_RoundResult) ProtoMessage() {}

func (x *ActionResponse_RoundResult) ProtoReflect() protoreflect.Message {
	mi := &file_mafia_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse_RoundResult.ProtoReflect.Descriptor instead.
func (*ActionResponse_RoundResult) Descriptor() ([]byte, []int) {
	return file_mafia_proto_rawDescGZIP(), []int{1, 12}
}

func (x *ActionResponse_RoundResult) GetUserMsg() string {
	if x != nil {
		return x.UserMsg
	}
	return ""
}

var File_mafia_proto protoreflect.FileDescriptor

var file_mafia_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x61, 0x66, 0x69, 0x61, 0x22, 0xec, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4e, 0x69,
	0x63, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x14,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x6d,
	0x61, 0x66, 0x69, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x48, 0x00, 0x52, 0x11, 0x6b,
	0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x61, 0x66, 0x69, 0x61,
	0x12, 0x4b, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x61, 0x67, 0x65, 0x5f, 0x6d,
	0x61, 0x66, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x67, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x69, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x12, 0x44, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x2a, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x25, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x24,
	0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0x27, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4e,
	0x69, 0x63, 0x6b, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x46, 0x0a,
	0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x11, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x52, 0x0a, 0x10,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x66, 0x69, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x28, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x55, 0x0a, 0x13, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xb5, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x49,
	0x4c, 0x4c, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x4d, 0x41, 0x46,
	0x49, 0x41, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x49, 0x47,
	0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x46, 0x49, 0x41, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x07, 0x12,
	0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x08, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x11, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x66, 0x69,
	0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x76,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x66, 0x69,
	0x61, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d,
	0x61, 0x66, 0x69, 0x61, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x79,
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x61, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x63, 0x6f, 0x6d,
	0x69, 0x73, 0x73, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0a, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x0d,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x1a, 0x4c, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x4a, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x43,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x1a, 0x51, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0x23, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x69, 0x63, 0x6b, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x66, 0x69,
	0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x4d, 0x0a, 0x0f, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x4b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x1a, 0x7f, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x61, 0x72,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x48, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a,
	0x2a, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x45, 0x0a, 0x0a, 0x44,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x1a, 0x60, 0x0a, 0x0c, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x61,
	0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x28, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xec,
	0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x53, 0x53, 0x49, 0x47,
	0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x53, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x04, 0x12,
	0x15, 0x0a, 0x11, 0x4d, 0x41, 0x46, 0x49, 0x41, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53,
	0x41, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x44,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x52,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x0b, 0x22, 0x40, 0x0a,
	0x0b, 0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x41, 0x46, 0x49, 0x41, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x4d, 0x49,
	0x53, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x49, 0x56, 0x49, 0x4c, 0x49, 0x41,
	0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x50, 0x49, 0x52, 0x49, 0x54, 0x10, 0x03, 0x42,
	0x0f, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x45, 0x0a, 0x0b, 0x4d, 0x61, 0x66, 0x69, 0x61, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x08, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x6d, 0x61,
	0x66, 0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x6d, 0x61, 0x66,
	0x69, 0x61, 0x3b, 0x6d, 0x61, 0x66, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mafia_proto_rawDescOnce sync.Once
	file_mafia_proto_rawDescData = file_mafia_proto_rawDesc
)

func file_mafia_proto_rawDescGZIP() []byte {
	file_mafia_proto_rawDescOnce.Do(func() {
		file_mafia_proto_rawDescData = protoimpl.X.CompressGZIP(file_mafia_proto_rawDescData)
	})
	return file_mafia_proto_rawDescData
}

var file_mafia_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mafia_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_mafia_proto_goTypes = []interface{}{
	(Action_Type)(0),                                   // 0: mafia.Action.Type
	(ActionResponse_Type)(0),                           // 1: mafia.ActionResponse.Type
	(ActionResponse_EPlayerRole)(0),                    // 2: mafia.ActionResponse.EPlayerRole
	(*Action)(nil),                                     // 3: mafia.Action
	(*ActionResponse)(nil),                             // 4: mafia.ActionResponse
	(*Action_StartSession)(nil),                        // 5: mafia.Action.StartSession
	(*Action_PlayerRole)(nil),                          // 6: mafia.Action.PlayerRole
	(*Action_GameState)(nil),                           // 7: mafia.Action.GameState
	(*Action_PlayersNicks)(nil),                        // 8: mafia.Action.PlayersNicks
	(*Action_Vote)(nil),                                // 9: mafia.Action.Vote
	(*Action_KillPlayerByMafia)(nil),                   // 10: mafia.Action.KillPlayerByMafia
	(*Action_InvestigateMafia)(nil),                    // 11: mafia.Action.InvestigateMafia
	(*Action_InterruptGame)(nil),                       // 12: mafia.Action.InterruptGame
	(*Action_InvestigationResult)(nil),                 // 13: mafia.Action.InvestigationResult
	(*ActionResponse_ActionResult)(nil),                // 14: mafia.ActionResponse.ActionResult
	(*ActionResponse_AssignUserId)(nil),                // 15: mafia.ActionResponse.AssignUserId
	(*ActionResponse_PlayerRole)(nil),                  // 16: mafia.ActionResponse.PlayerRole
	(*ActionResponse_GameState)(nil),                   // 17: mafia.ActionResponse.GameState
	(*ActionResponse_PlayerNicks)(nil),                 // 18: mafia.ActionResponse.PlayerNicks
	(*ActionResponse_VoteResult)(nil),                  // 19: mafia.ActionResponse.VoteResult
	(*ActionResponse_MafiaKillResult)(nil),             // 20: mafia.ActionResponse.MafiaKillResult
	(*ActionResponse_CommisarInvestigationResult)(nil), // 21: mafia.ActionResponse.CommisarInvestigationResult
	(*ActionResponse_StartGame)(nil),                   // 22: mafia.ActionResponse.StartGame
	(*ActionResponse_EndGame)(nil),                     // 23: mafia.ActionResponse.EndGame
	(*ActionResponse_DayStarted)(nil),                  // 24: mafia.ActionResponse.DayStarted
	(*ActionResponse_NightStarted)(nil),                // 25: mafia.ActionResponse.NightStarted
	(*ActionResponse_RoundResult)(nil),                 // 26: mafia.ActionResponse.RoundResult
}
var file_mafia_proto_depIdxs = []int32{
	0,  // 0: mafia.Action.type:type_name -> mafia.Action.Type
	5,  // 1: mafia.Action.start_session:type_name -> mafia.Action.StartSession
	6,  // 2: mafia.Action.player_role:type_name -> mafia.Action.PlayerRole
	7,  // 3: mafia.Action.game_state:type_name -> mafia.Action.GameState
	8,  // 4: mafia.Action.player_nicks:type_name -> mafia.Action.PlayersNicks
	9,  // 5: mafia.Action.vote:type_name -> mafia.Action.Vote
	10, // 6: mafia.Action.kill_player_by_mafia:type_name -> mafia.Action.KillPlayerByMafia
	11, // 7: mafia.Action.investiage_mafia:type_name -> mafia.Action.InvestigateMafia
	12, // 8: mafia.Action.interrupt_game:type_name -> mafia.Action.InterruptGame
	13, // 9: mafia.Action.investigation_result:type_name -> mafia.Action.InvestigationResult
	1,  // 10: mafia.ActionResponse.type:type_name -> mafia.ActionResponse.Type
	15, // 11: mafia.ActionResponse.assign_user_id:type_name -> mafia.ActionResponse.AssignUserId
	16, // 12: mafia.ActionResponse.role:type_name -> mafia.ActionResponse.PlayerRole
	17, // 13: mafia.ActionResponse.game_state:type_name -> mafia.ActionResponse.GameState
	18, // 14: mafia.ActionResponse.player_nicks:type_name -> mafia.ActionResponse.PlayerNicks
	19, // 15: mafia.ActionResponse.vote_result:type_name -> mafia.ActionResponse.VoteResult
	20, // 16: mafia.ActionResponse.mafia_kill_result:type_name -> mafia.ActionResponse.MafiaKillResult
	21, // 17: mafia.ActionResponse.comissare_investigation_result:type_name -> mafia.ActionResponse.CommisarInvestigationResult
	22, // 18: mafia.ActionResponse.start_game:type_name -> mafia.ActionResponse.StartGame
	23, // 19: mafia.ActionResponse.end_game:type_name -> mafia.ActionResponse.EndGame
	24, // 20: mafia.ActionResponse.day_started:type_name -> mafia.ActionResponse.DayStarted
	25, // 21: mafia.ActionResponse.night_started:type_name -> mafia.ActionResponse.NightStarted
	26, // 22: mafia.ActionResponse.result:type_name -> mafia.ActionResponse.RoundResult
	14, // 23: mafia.ActionResponse.AssignUserId.result:type_name -> mafia.ActionResponse.ActionResult
	2,  // 24: mafia.ActionResponse.PlayerRole.role:type_name -> mafia.ActionResponse.EPlayerRole
	14, // 25: mafia.ActionResponse.VoteResult.result:type_name -> mafia.ActionResponse.ActionResult
	14, // 26: mafia.ActionResponse.MafiaKillResult.result:type_name -> mafia.ActionResponse.ActionResult
	14, // 27: mafia.ActionResponse.CommisarInvestigationResult.result:type_name -> mafia.ActionResponse.ActionResult
	2,  // 28: mafia.ActionResponse.NightStarted.role:type_name -> mafia.ActionResponse.EPlayerRole
	3,  // 29: mafia.MafiaDriver.DoAction:input_type -> mafia.Action
	4,  // 30: mafia.MafiaDriver.DoAction:output_type -> mafia.ActionResponse
	30, // [30:31] is the sub-list for method output_type
	29, // [29:30] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_mafia_proto_init() }
func file_mafia_proto_init() {
	if File_mafia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mafia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_StartSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_PlayerRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_PlayersNicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_KillPlayerByMafia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_InvestigateMafia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_InterruptGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_InvestigationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_ActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_AssignUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_PlayerRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_PlayerNicks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_VoteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_MafiaKillResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_CommisarInvestigationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_StartGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_EndGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_DayStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_NightStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mafia_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse_RoundResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mafia_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Action_StartSession_)(nil),
		(*Action_PlayerRole_)(nil),
		(*Action_GameState_)(nil),
		(*Action_PlayerNicks)(nil),
		(*Action_Vote_)(nil),
		(*Action_KillPlayerByMafia_)(nil),
		(*Action_InvestiageMafia)(nil),
		(*Action_InterruptGame_)(nil),
		(*Action_InvestigationResult_)(nil),
	}
	file_mafia_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ActionResponse_AssignUserId_)(nil),
		(*ActionResponse_Role)(nil),
		(*ActionResponse_GameState_)(nil),
		(*ActionResponse_PlayerNicks_)(nil),
		(*ActionResponse_VoteResult_)(nil),
		(*ActionResponse_MafiaKillResult_)(nil),
		(*ActionResponse_ComissareInvestigationResult)(nil),
		(*ActionResponse_StartGame_)(nil),
		(*ActionResponse_EndGame_)(nil),
		(*ActionResponse_DayStarted_)(nil),
		(*ActionResponse_NightStarted_)(nil),
		(*ActionResponse_Result)(nil),
	}
	file_mafia_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ActionResponse_ActionResult_Success)(nil),
		(*ActionResponse_ActionResult_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mafia_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mafia_proto_goTypes,
		DependencyIndexes: file_mafia_proto_depIdxs,
		EnumInfos:         file_mafia_proto_enumTypes,
		MessageInfos:      file_mafia_proto_msgTypes,
	}.Build()
	File_mafia_proto = out.File
	file_mafia_proto_rawDesc = nil
	file_mafia_proto_goTypes = nil
	file_mafia_proto_depIdxs = nil
}
